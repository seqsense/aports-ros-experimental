diff --git a/include/dynamic_reconfigure/server.h b/include/dynamic_reconfigure/server.h
index dac2b91..1a3ddd9 100644
--- a/include/dynamic_reconfigure/server.h
+++ b/include/dynamic_reconfigure/server.h
@@ -192,22 +192,23 @@ private:
     updateConfigInternal(init_config);
   }
 
-  void callCallback(ConfigType &config, int level)
+  void callCallback(ConfigType &config, const int level)
   {
     if (callback_) // At startup we need to load the configuration with all level bits set. (Everything has changed.)
       try {
         callback_(config, level);
       }
-      catch (std::exception &e)
+      catch (const std::exception &e)
       {
-        ROS_WARN("Reconfigure callback failed with exception %s: ", e.what());
+        const char *what = e.what();
+        ROS_WARN_STREAM("Reconfigure callback failed with exception " << what << ": ");
       }
       catch (...)
       {
         ROS_WARN("Reconfigure callback failed with unprintable exception.");
       }
-    else
-      ROS_DEBUG("setCallback did not call callback because it was zero."); /// @todo kill this line.
+    // else
+    //   ROS_DEBUG("setCallback did not call callback because it was zero."); /// @todo kill this line.
   }
 
   bool setConfigCallback(dynamic_reconfigure::Reconfigure::Request &req,
@@ -218,7 +219,7 @@ private:
     ConfigType new_config = config_;
     new_config.__fromMessage__(req.config);
     new_config.__clamp__();
-    uint32_t level = config_.__level__(new_config);
+    const uint32_t level = config_.__level__(new_config);
 
     callCallback(new_config, level);
 
