diff --git a/CHANGELOG.rst b/compressed_depth_image_transport/CHANGELOG.rst
index e59c632..ad9842b 100644
--- a/CHANGELOG.rst
+++ b/CHANGELOG.rst
@@ -2,6 +2,17 @@
 Changelog for package compressed_depth_image_transport
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
+1.15.0 (2023-01-30)
+-------------------
+* Update maintainer in ros1 branches (`#132 <https://github.com/ros-perception/image_transport_plugins/issues/132>`_)
+* Fix number of elements in vector parameter to call cv::imencode for OpenCV 4.7 (`#130 <https://github.com/ros-perception/image_transport_plugins/issues/130>`_)
+* Fix uninitialized memory usage (`#125 <https://github.com/ros-perception/image_transport_plugins/issues/125>`_)
+* Make the default compressed depth png_level 1 instead of 9 to save cpu (`#85 <https://github.com/ros-perception/image_transport_plugins/issues/85>`_)
+  The default 9 is so cpu intensive to be frequently unusable and results in many dropped frames, and there is still plenty of bandwidth savings from the compression at level 1.
+* Fix copyright year 20012 -> 2012 (`#80 <https://github.com/ros-perception/image_transport_plugins/issues/80>`_)
+* Fix regression in compressed_depth_image_transport with old bags (`#64 <https://github.com/ros-perception/image_transport_plugins/issues/64>`_)
+* Contributors: Johannes Meyer, Kenji Brameld, Lucas Walter, Martin Pecka, Michael Carroll, Timm Linder, ijnek, v4hn
+
 1.14.0 (2020-05-14)
 -------------------
 * Bump CMake version to avoid CMP0048 warning (`#53 <https://github.com/ros-perception/image_transport_plugins/issues/53>`_)
diff --git a/cfg/CompressedDepthPublisher.cfg b/compressed_depth_image_transport/cfg/CompressedDepthPublisher.cfg
index 834a2c5..0df1d2b 100755
--- a/cfg/CompressedDepthPublisher.cfg
+++ b/cfg/CompressedDepthPublisher.cfg
@@ -13,7 +13,7 @@ format_enum = gen.enum( [gen.const("png", str_t, "png", "PNG lossless compressio
 gen.add("format", str_t, 0, "Compression format", "png", edit_method = format_enum)
 gen.add("depth_max", double_t, 0, "Maximum depth value (meter) ", 10 , 1, 100)
 gen.add("depth_quantization", double_t, 0, "Depth value at which the sensor accuracy is 1 m (Kinect: >75)", 100, 1, 150)
-gen.add("png_level", int_t, 0, "PNG compression level", 9, 1, 9)
+gen.add("png_level", int_t, 0, "PNG compression level", 1, 1, 9)
 
  
 exit(gen.generate(PACKAGE, "CompressedDepthPublisher", "CompressedDepthPublisher"))
diff --git a/include/compressed_depth_image_transport/compressed_depth_publisher.h b/compressed_depth_image_transport/include/compressed_depth_image_transport/compressed_depth_publisher.h
index 9498261..a1f8d43 100644
--- a/include/compressed_depth_image_transport/compressed_depth_publisher.h
+++ b/include/compressed_depth_image_transport/compressed_depth_publisher.h
@@ -1,7 +1,7 @@
 /*********************************************************************
 * Software License Agreement (BSD License)
 * 
-*  Copyright (c) 20012, Willow Garage, Inc.
+*  Copyright (c) 2012, Willow Garage, Inc.
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without
diff --git a/include/compressed_depth_image_transport/compressed_depth_subscriber.h b/compressed_depth_image_transport/include/compressed_depth_image_transport/compressed_depth_subscriber.h
index 4ccf5a3..9cc7251 100644
--- a/include/compressed_depth_image_transport/compressed_depth_subscriber.h
+++ b/include/compressed_depth_image_transport/compressed_depth_subscriber.h
@@ -1,7 +1,7 @@
 /*********************************************************************
 * Software License Agreement (BSD License)
 * 
-*  Copyright (c) 20012, Willow Garage, Inc.
+*  Copyright (c) 2012, Willow Garage, Inc.
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without
diff --git a/include/compressed_depth_image_transport/compression_common.h b/compressed_depth_image_transport/include/compressed_depth_image_transport/compression_common.h
index d3e84df..811eed2 100644
--- a/include/compressed_depth_image_transport/compression_common.h
+++ b/include/compressed_depth_image_transport/compression_common.h
@@ -1,7 +1,7 @@
 /*********************************************************************
 * Software License Agreement (BSD License)
 * 
-*  Copyright (c) 20012, Willow Garage, Inc.
+*  Copyright (c) 2012, Willow Garage, Inc.
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without
diff --git a/package.xml b/compressed_depth_image_transport/package.xml
index 4b82808..2b161e3 100644
--- a/package.xml
+++ b/package.xml
@@ -1,17 +1,18 @@
 <package>
   <name>compressed_depth_image_transport</name>
-  <version>1.14.0</version>
+  <version>1.15.0</version>
   <description>
     Compressed_depth_image_transport provides a plugin to image_transport for transparently sending
     depth images (raw, floating-point) using PNG compression.
   </description>
-  <maintainer email="dgossow@willowgarage.com">David Gossow</maintainer>
+  <maintainer email="kenjibrameld@gmail.com">Kenji Brameld</maintainer>
   <license>BSD</license>
 
   <url type="website">http://www.ros.org/wiki/image_transport_plugins</url>
   <author>Julius Kammerl</author>
+  <author>David Gossow</author>
 
-  <buildtool_depend>catkin</buildtool_depend>  
+  <buildtool_depend>catkin</buildtool_depend>
 
   <build_depend>cv_bridge</build_depend>
   <build_depend>dynamic_reconfigure</build_depend>
diff --git a/src/codec.cpp b/compressed_depth_image_transport/src/codec.cpp
index 7ac9c2e..f1dd292 100644
--- a/src/codec.cpp
+++ b/src/codec.cpp
@@ -82,6 +82,8 @@ sensor_msgs::Image::Ptr decodeCompressedDepthImage(const sensor_msgs::Compressed
       compression_format = "png";
     } else if (format.find("compressedDepth rvl") != std::string::npos) {
       compression_format = "rvl";
+    } else if (format.find("compressedDepth") != std::string::npos && format.find("compressedDepth ") == std::string::npos) {
+      compression_format = "png";
     } else {
       ROS_ERROR("Unsupported image format: %s", message.format.c_str());
       return sensor_msgs::Image::Ptr();
@@ -215,14 +217,13 @@ sensor_msgs::CompressedImage::Ptr encodeCompressedDepthImage(
 
   // Compression settings
   std::vector<int> params;
-  params.resize(3, 0);
 
   // Bit depth of image encoding
   int bitDepth = enc::bitDepth(message.encoding);
   int numChannels = enc::numChannels(message.encoding);
 
   // Image compression configuration
-  ConfigHeader compressionConfig;
+  ConfigHeader compressionConfig {};
   compressionConfig.format = INV_DEPTH;
 
   // Compressed image data
@@ -232,8 +233,9 @@ sensor_msgs::CompressedImage::Ptr encodeCompressedDepthImage(
   compressed->format += "; compressedDepth " + compression_format;
 
   // Check input format
-  params[0] = cv::IMWRITE_PNG_COMPRESSION;
-  params[1] = png_level;
+  params.reserve(2);
+  params.emplace_back(cv::IMWRITE_PNG_COMPRESSION);
+  params.emplace_back(png_level);
 
   if ((bitDepth == 32) && (numChannels == 1))
   {
diff --git a/src/compressed_depth_publisher.cpp b/compressed_depth_image_transport/src/compressed_depth_publisher.cpp
index 5daddf3..ff8343c 100644
--- a/src/compressed_depth_publisher.cpp
+++ b/src/compressed_depth_publisher.cpp
@@ -1,7 +1,7 @@
 /*********************************************************************
 * Software License Agreement (BSD License)
 *
-*  Copyright (c) 20012, Willow Garage, Inc.
+*  Copyright (c) 2012, Willow Garage, Inc.
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
@@ -62,7 +62,7 @@ void CompressedDepthPublisher::advertiseImpl(ros::NodeHandle &nh, const std::str
 
   // Set up reconfigure server for this topic
   reconfigure_server_ = boost::make_shared<ReconfigureServer>(this->nh());
-  ReconfigureServer::CallbackType f = boost::bind(&CompressedDepthPublisher::configCb, this, _1, _2);
+  ReconfigureServer::CallbackType f = boost::bind(&CompressedDepthPublisher::configCb, this, boost::placeholders::_1, boost::placeholders::_2);
   reconfigure_server_->setCallback(f);
 }
 
diff --git a/src/compressed_depth_subscriber.cpp b/compressed_depth_image_transport/src/compressed_depth_subscriber.cpp
index 33ef2a8..562fa4a 100644
--- a/src/compressed_depth_subscriber.cpp
+++ b/src/compressed_depth_subscriber.cpp
@@ -1,7 +1,7 @@
 /*********************************************************************
 * Software License Agreement (BSD License)
 *
-*  Copyright (c) 20012, Willow Garage, Inc.
+*  Copyright (c) 2012, Willow Garage, Inc.
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
diff --git a/src/manifest.cpp b/compressed_depth_image_transport/src/manifest.cpp
index 51006c3..05587d7 100644
--- a/src/manifest.cpp
+++ b/src/manifest.cpp
@@ -1,7 +1,7 @@
 /*********************************************************************
 * Software License Agreement (BSD License)
 * 
-*  Copyright (c) 20012, Willow Garage, Inc.
+*  Copyright (c) 2012, Willow Garage, Inc.
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without
@@ -32,7 +32,7 @@
 *  POSSIBILITY OF SUCH DAMAGE.
 *********************************************************************/
 
-#include <pluginlib/class_list_macros.h>
+#include <pluginlib/class_list_macros.hpp>
 #include "compressed_depth_image_transport/compressed_depth_publisher.h"
 #include "compressed_depth_image_transport/compressed_depth_subscriber.h"
 
